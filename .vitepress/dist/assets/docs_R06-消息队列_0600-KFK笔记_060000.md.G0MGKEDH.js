import{_ as a,c as i,o as t,ag as e}from"./framework-BN9qVwRq.js";const c=JSON.parse('{"title":"基础知识","description":"","frontmatter":{},"headers":[],"relativePath":"docs/R06-消息队列/0600-KFK笔记/060000.md","filePath":"docs/R06-消息队列/0600-KFK笔记/060000.md"}'),h={name:"docs/R06-消息队列/0600-KFK笔记/060000.md"};function n(l,s,r,p,o,d){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="基础知识" tabindex="-1">基础知识 <a class="header-anchor" href="#基础知识" aria-label="Permalink to &quot;基础知识&quot;">​</a></h1><h2 id="基础概念" tabindex="-1">基础概念 <a class="header-anchor" href="#基础概念" aria-label="Permalink to &quot;基础概念&quot;">​</a></h2><table tabindex="0"><thead><tr><th>组件</th><th>组件名</th><th>描述</th></tr></thead><tbody><tr><td>producer</td><td>消息生产者</td><td>向Kafka broker发送消息的客户端</td></tr><tr><td>consumer</td><td>消息消费者</td><td>从Kafka broker获取消息的客户端</td></tr><tr><td>consumer group</td><td>消费者组(CG)</td><td>组内每个消费者负责消费不同分区的数据，提高消费能力。一个分区只能由组内一个消费者消费，消费者组之间互不影响。所有的消费者都属于某个消费者组，即消费者组是逻辑上的一个订阅者。</td></tr><tr><td>broker</td><td>Kafka节点</td><td>一台Kafka机器就是一个broker。一个集群由多个broker组成。一个broker可以容纳多个topic</td></tr><tr><td>topic</td><td>主题</td><td>可以理解为一个队列，topic将消息分类，生产者和消费者面向的是同一个Topic</td></tr><tr><td>partition</td><td>分区</td><td>为了实现扩展性，提高并发能力，一个topic可以分为多个partition，同一个topic在不同的分区的数据是不重复的，每个partition是一个有序的队列</td></tr><tr><td>replication</td><td>副本</td><td>每个分区都有多个副本，副本的作用是做容灾备份。当主副本(Leader)故障时会选择一个副本(Follower)上位成为Leader</td></tr><tr><td>message</td><td>消息</td><td>每一条发送的消息主体</td></tr><tr><td>leader</td><td>主副本</td><td>每个分区多个副本的&quot;主&quot;副本，生产者发送数据和消费者消费数据的对象</td></tr><tr><td>follower</td><td>从副本</td><td>每个分区多个副本的&quot;从&quot;副本，实时从Leader同步数据</td></tr><tr><td>offset</td><td>偏移量</td><td>消费者消费的位置信息，同一主题不同分区的offset相互独立</td></tr></tbody></table><p><strong>备注</strong></p><ol><li>一个分区只属于一个主题，一个主题可以有多个分区</li><li>同一主题的不同分区内容不一样，每个分区有自己独立的offset</li><li>同一主题不同的分区能够放置到不同节点的broker</li><li>分区规则设置得当可以使得同一主题的消息均匀分布在不同的分区</li></ol><h2 id="相关操作" tabindex="-1">相关操作 <a class="header-anchor" href="#相关操作" aria-label="Permalink to &quot;相关操作&quot;">​</a></h2><h3 id="_1-启动kafka" tabindex="-1">1. 启动Kafka <a class="header-anchor" href="#_1-启动kafka" aria-label="Permalink to &quot;1. 启动Kafka&quot;">​</a></h3><h4 id="启动zookeeper" tabindex="-1">启动ZooKeeper <a class="header-anchor" href="#启动zookeeper" aria-label="Permalink to &quot;启动ZooKeeper&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 前台启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/zookeeper-server-start.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/zookeeper.properties</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 后台启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin/zookeeper-server-start.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/zookeeper.properties</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/log/kafka/zookeeper.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 2&gt;&amp;1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span></code></pre></div><h4 id="启动kfk服务器" tabindex="-1">启动KFK服务器 <a class="header-anchor" href="#启动kfk服务器" aria-label="Permalink to &quot;启动KFK服务器&quot;">​</a></h4><p>在 ZooKeeper 启动后，使用以下命令启动 Kafka 服务器：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 前台启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/kafka-server-start.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/server.properties</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 后台启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin/kafka-server-start.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/server.properties</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/log/kafka/kafka.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 2&gt;&amp;1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span></code></pre></div><h3 id="_2-创建主题" tabindex="-1">2.创建主题 <a class="header-anchor" href="#_2-创建主题" aria-label="Permalink to &quot;2.创建主题&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/kafka-topics.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --topic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;topic-one&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zookeeper</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost:2181</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --partitions</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --replication-factor</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre></div><h4 id="验证主题创建" tabindex="-1">验证主题创建 <a class="header-anchor" href="#验证主题创建" aria-label="Permalink to &quot;验证主题创建&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/kafka-topics.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zookeeper</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost:2181</span></span></code></pre></div><h3 id="_3-发送消息" tabindex="-1">3.发送消息 <a class="header-anchor" href="#_3-发送消息" aria-label="Permalink to &quot;3.发送消息&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/kafka-console-producer.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --topic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;topic-one&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --broker-list</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost:9092</span></span></code></pre></div><h3 id="_4-消息消费" tabindex="-1">4.消息消费 <a class="header-anchor" href="#_4-消息消费" aria-label="Permalink to &quot;4.消息消费&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/kafka-console-consumer.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --topic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;topic-one&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --from-beginning</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --bootstrap-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost:9092</span></span></code></pre></div>`,20)]))}const g=a(h,[["render",n]]);export{c as __pageData,g as default};
