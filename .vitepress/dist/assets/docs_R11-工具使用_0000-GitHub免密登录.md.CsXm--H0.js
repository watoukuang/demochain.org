import{_ as i,c as a,o as t,ag as e}from"./framework-BN9qVwRq.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/R11-工具使用/0000-GitHub免密登录.md","filePath":"docs/R11-工具使用/0000-GitHub免密登录.md"}'),l={name:"docs/R11-工具使用/0000-GitHub免密登录.md"};function n(h,s,p,o,d,r){return t(),a("div",null,s[0]||(s[0]=[e(`<h2 id="github-认证方法" tabindex="-1">GitHub 认证方法 <a class="header-anchor" href="#github-认证方法" aria-label="Permalink to &quot;GitHub 认证方法&quot;">​</a></h2><h3 id="方法一-使用-ssh-密钥" tabindex="-1">方法一：使用 SSH 密钥 <a class="header-anchor" href="#方法一-使用-ssh-密钥" aria-label="Permalink to &quot;方法一：使用 SSH 密钥&quot;">​</a></h3><ol><li><p><strong>生成 SSH 密钥</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4096</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your_email@example.com&quot;</span></span></code></pre></div><ul><li>按提示操作，默认生成在 <code>~/.ssh/id_rsa</code> 和 <code>~/.ssh/id_rsa.pub</code></li></ul></li><li><p><strong>添加 SSH 密钥到 ssh-agent</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-agent</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_rsa</span></span></code></pre></div></li><li><p><strong>将 SSH 公钥添加到 GitHub</strong>：</p><ul><li>登录 GitHub</li><li>进入 Settings &gt; SSH and GPG keys</li><li>点击 New SSH key</li><li>粘贴 <code>~/.ssh/id_rsa.pub</code> 的内容</li></ul></li><li><p><strong>测试连接</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com</span></span></code></pre></div></li></ol><h3 id="方法二-使用个人访问令牌-pat" tabindex="-1">方法二：使用个人访问令牌（PAT） <a class="header-anchor" href="#方法二-使用个人访问令牌-pat" aria-label="Permalink to &quot;方法二：使用个人访问令牌（PAT）&quot;">​</a></h3><ol><li><strong>生成个人访问令牌</strong>：</li></ol><ul><li>登录 GitHub</li><li>进入 Settings &gt; Developer settings &gt; Personal access tokens</li><li>点击 Generate new token</li><li>选择所需权限并生成令牌</li></ul><ol start="2"><li><strong>使用令牌进行 Git 操作</strong>：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/username/repo.git</span></span></code></pre></div></li></ol><ul><li>当提示输入用户名和密码时： <ul><li>用户名：GitHub 用户名</li><li>密码：生成的令牌</li></ul></li></ul>`,8)]))}const c=i(l,[["render",n]]);export{g as __pageData,c as default};
